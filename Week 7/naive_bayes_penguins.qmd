---
title: "naive bayes penguins"
format: html
editor: visual
---

### Libraries

```{r, message = FALSE}
library(tidyverse)
library(bayesrules)
library(janitor)
library(e1071)
```

### Story

Weâ€™ll start our naive Bayes classification with just a single penguin. Suppose an Antarctic researcher comes across a penguin that weighs less than 4200g with a 195mm-long flipper and 50mm-long bill. Our goal is to help this researcher identify the species of this penguin, Adelie, Chinstrap, or Gentoo.

#### Let's Plot!

Make a visualization that will help the researcher determine the species based on the characteristics described above

```{r}
data(penguins_bayes)
penguins <- penguins_bayes
```

```{r}
ggplot(penguins) +
  geom_point(aes(x=flipper_length_mm, y = body_mass_g, color = species)) +
  facet_wrap(~species)
```

```{r}
ggplot(data = penguins) +
  geom_point(mapping = aes(x = flipper_length_mm, y = bill_length_mm, color = species)) +
  facet_grid(above_average_weight~species)
```

#### Code from Classmates

```{r}
ggplot(data = penguins, aes(x = above_average_weight, fill = species)) +
  geom_bar()
```

```{r}
ggplot(data = penguins, aes(bill_length_mm, flipper_length_mm, color = body_mass_g)) +
  geom_point() +
  geom_smooth(method = "lm") +
  facet_grid(~species)
```

#### Bayes Theorem

```{r}
penguins <- penguins %>% 
  mutate(above_average_weight = if_else(above_average_weight == 1, "yes", "no"))
```

P(B\|A)

-   P(Chinstrap \| Below Average Weight)

```{r}
penguins %>% 
  tabyl(above_average_weight, species) %>% 
  adorn_percentages("row")
```

#### Naive Bayes Classification

```{r}
naive_model_hints <- naiveBayes(species ~ flipper_length_mm + bill_length_mm + above_average_weight, data = penguins)
```

Our Penguin

```{r}
our_penguin <- data.frame(bill_length_mm = 50, flipper_length_mm = 195, above_average_weight = "no")
```

Ask our model to make a prediction of what species our penguin is

```{r}
predict(naive_model_hints, newdata = our_penguin,  type = "raw")
```

Test our model for accuracy with confusion matrix

```{r}
penguins <- penguins %>% 
  mutate(predicted_species = predict(naive_model_hints, newdata = .))
```

```{r}
penguins %>% 
  tabyl(species, predicted_species) %>% 
  adorn_percentages("row") %>% 
  adorn_pct_formatting(digits = 2) %>% 
  adorn_ns()
```

```{r}
naive_model_hints
```
